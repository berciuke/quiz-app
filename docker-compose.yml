version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: quiz-app-postgres
    environment:
      POSTGRES_DB: quiz_app_db
      POSTGRES_USER: quiz_user
      POSTGRES_PASSWORD: quiz_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - quiz-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quiz_user -d quiz_app_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:latest
    container_name: quiz-app-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: quiz_mongo_user
      MONGO_INITDB_ROOT_PASSWORD: quiz_mongo_password
      MONGO_INITDB_DATABASE: quiz_db
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - quiz-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Gateway Service
  gateway:
    build: 
      context: ./services/gateway
      dockerfile: Dockerfile
    container_name: quiz-app-gateway
    ports:
      - "3001:3001"
    networks:
      - quiz-network
    depends_on:
      - user-service
      - quiz-service
    environment:
      - NODE_ENV=production
      - USER_SERVICE_URL=http://user-service:3002
      - QUIZ_SERVICE_URL=http://quiz-service:3003
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  user-service:
    build: 
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: quiz-app-user-service
    ports:
      - "3002:3002"
    networks:
      - quiz-network
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - PORT=3002
      - DATABASE_URL=postgresql://quiz_user:quiz_password@postgres:5432/quiz_app_db
      - JWT_SECRET=quiz-app-super-secret-jwt-key-production-change-me
      - JWT_EXPIRATION=24h
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
    volumes:
      - ./services/user-service:/app
      - /app/node_modules
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: >
      sh -c "
        echo 'Starting user service...' &&
        npm start
      "

  # Quiz Service
  quiz-service:
    build: 
      context: ./services/quiz-service
      dockerfile: Dockerfile
    container_name: quiz-app-quiz-service
    ports:
      - "3003:3003"
    networks:
      - quiz-network
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - PORT=3003
      - MONGO_URI=mongodb://quiz_mongo_user:quiz_mongo_password@mongodb:27017/quiz_db?authSource=admin
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  mongodb_data:
    driver: local

networks:
  quiz-network:
    driver: bridge 